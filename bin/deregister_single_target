#!/usr/bin/env ruby

require "aws-sdk-elasticloadbalancingv2"

host_id = ARGV[0]

fail "Please specify HOST_ID" if host_id.nil?

REGION = "us-west-2".freeze
class AWSClient
  class << self
    def elbv2
      @elbv2 ||= Aws::ElasticLoadBalancingV2::Client.new(region: REGION)
    end
  end
end

tgs = AWSClient.elbv2.describe_target_groups.target_groups

tgs.each do |tg|
  targets = AWSClient.elbv2.describe_target_health(target_group_arn: tg.target_group_arn)
                  .target_health_descriptions.map(&:target)
  target_ports = targets.map(&:port).uniq

  AWSClient.elbv2.deregister_targets({
    target_group_arn: tg.target_group_arn,
    targets: [
      {
        id: host_id,
        port: target_ports[0]
      }
    ]
  })
end

tgs.each do |tg|
  targets = AWSClient.elbv2.describe_target_health(target_group_arn: tg.target_group_arn)
                  .target_health_descriptions.map(&:target)
  target_ports = targets.map(&:port).uniq

  AWSClient.elbv2.wait_until(
    :target_deregistered,
    target_group_arn: tg.target_group_arn,
    targets: [
      {
        id: host_id,
        port: target_ports[0]
      }
    ]
  )

  puts "#{tg.target_group_name}:#{target_ports[0]} de-registered"
end

puts "\nTarget host de-registered from all target groups"
